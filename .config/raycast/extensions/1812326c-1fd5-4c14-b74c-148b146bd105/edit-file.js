"use strict";var m=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var S=(r,t)=>{for(var e in t)m(r,e,{get:t[e],enumerable:!0})},T=(r,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of $(t))!P.call(r,o)&&o!==e&&m(r,o,{get:()=>t[o],enumerable:!(s=y(t,o))||s.enumerable});return r};var x=r=>T(m({},"__esModule",{value:!0}),r);var I={};S(I,{default:()=>O});module.exports=x(I);var g=require("@raycast/api");var l=require("fs/promises");var p=require("@raycast/api");var i=(o=>(o.Bash="bash",o.Zsh="zsh",o.Fish="fish",o.Sh="sh",o))(i||{}),h=r=>Object.values(i).includes(r);var a=()=>{let{alacrittyPath:r,shellPath:t}=(0,p.getPreferenceValues)();if(r.split("/").pop()!=="alacritty")throw new Error(`Invalid Alacritty path: ${r}`);let e=t.split("/").pop();if(!e||!h(e))throw new Error(`Invalid shell: ${e} (use ${Object.values(i).join(", ")})`);return{alacrittyPath:r,shellPath:t,shell:e}};var f=require("child_process");var w=r=>new Promise((t,e)=>{let{alacrittyPath:s}=a(),o=(0,f.spawn)(s,r);o.on("error",n=>{if(n.message.includes("ENOENT")){e(new Error(`Alacritty not found at path: ${s}`));return}e(n)}),o.stderr.on("data",n=>e(new Error(n.toString()))),o.on("close",n=>t(n))});var u=async r=>{let{shellPath:t}=a();try{await(0,l.access)(t,l.constants.X_OK)}catch(e){if(e instanceof Error){if(e.message.includes("ENOENT"))throw new Error(`Shell not found at path: ${t}`);if(e.message.includes("EACCES"))throw new Error(`Shell not executable at path: ${t}`)}throw e}return await w(["--command",t,"-c",r])};var c=require("@raycast/api"),E=r=>async()=>{try{await r()}catch(t){await(0,c.showToast)({title:"Error",message:t instanceof Error?t.message:String(t),style:c.Toast.Style.Failure})}};var d="/usr/bin/vim",A=()=>{let{shell:r}=a();return r==="fish"?`test -z "$EDITOR" && set EDITOR '${d}' ; $EDITOR`:`\${EDITOR:-${d}}`},O=E(async()=>{let r=await(0,g.getSelectedFinderItems)();if(!r.length)throw new Error("Could not get the selected Finder items");let t=A(),e=r.map(o=>`'${o.path}'`).join(" "),s=`${t} ${e}`;await u(s)});
